<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    namespace表示命名空间
    其作用：当前的xml映射文件，它映射的是namespace里面所定义的这个mapper文件
-->
<mapper namespace="com.pn.mapper.UserMapper">

    <!--结果集映射：当数据库表里面的字段，与实体类里面的属性，如果对应不上-->
    <resultMap id="userResult" type="user">
        <id column="user_id" property="userId"></id>
        <result column="user_code" property="userCode"></result>
        <result column="user_name" property="userName"></result>
        <result column="user_pwd" property="userPwd"></result>
        <result column="user_type" property="userType"></result>
        <result column="user_state" property="userState"></result>
        <result column="is_delete" property="isDelete"></result>
        <result column="create_by" property="createBy"></result>
        <result column="create_time" property="createTime"></result>
        <result column="update_by" property="updateBy"></result>
        <result column="update_time" property="updateTime"></result>
        <result column="getCode" property="getCode"></result>
    </resultMap>

    <!--public User findUserByCode(String userCode)-->
    <select id="findUserByCode" resultMap="userResult">
        select * from user_info
        where user_code = #{userCode} and is_delete = 0
    </select>

    <!--public int selectUserCount(User user)-->
    <select id="selectUserCount" resultType="integer">
        select count(*) from user_info
        <where>
            <if test="userCode != null and userCode != ''">
                and user_code like concat('%',#{userCode},'%')
            </if>
            <if test="userType != null and userType != ''">
                and user_type = #{userType}
            </if>
            <if test="userState != null and userState != ''">
                and user_state = #{userState}
            </if>
            and is_delete = 0
        </where>
    </select>

    <!--public List<User> selectUserPage(@Param("page") Page page, @Param("user") User user)-->
    <select id="selectUserPage" resultMap="userResult">
        select t1.*,t2.user_code getCode from user_info t1,user_info t2
        <where>
            and t1.create_by = t2.user_id
            <if test="user.userCode != null and user.userCode != ''">
                and t1.user_code like concat('%',#{user.userCode},'%')
            </if>
            <if test="user.userType != null and user.userType != ''">
                and t1.user_type = #{user.userType}
            </if>
            <if test="user.userState != null and user.userState != ''">
                and t1.user_state = #{user.userState}
            </if>
            and t1.is_delete = 0
        </where>
        limit #{page.limitIndex},#{page.pageSize}
    </select>

    <!--public int insertUser(User user)-->
    <insert id="insertUser">
        insert into user_info(user_code,user_name,user_pwd,user_state,is_delete,create_by,create_time)
        values(#{userCode},#{userName},#{userPwd},0,0,#{createBy},now())
    </insert>

    <!--public int updateUserState(User user)-->
    <update id="updateUserState">
        update user_info set user_state = #{userState},update_by = #{updateBy},update_time = #{updateTime}
        where user_id = #{userId}
    </update>

    <!--public int setIsDeleteByUids(List<Integer> userIdList)-->
    <update id="setIsDeleteByUids">
        update user_info set is_delete = 1 where user_id in
        <foreach collection="list" open="(" close=")" separator="," item="userId">
            #{userId}
        </foreach>
    </update>

    <!--public int updateNameById(User user)-->
    <update id="updateNameById">
        update user_info set user_name = #{userName},update_by = #{updateBy},update_time = now()
        where user_id = #{userId}
    </update>

    <!--public int updatePwdById(User user)-->
    <update id="updatePwdById">
        update user_info set user_pwd = #{userPwd} where user_id = #{userId}
    </update>

</mapper>
